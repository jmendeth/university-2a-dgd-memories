/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 40.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("HEX0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX6[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("HEX6[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("HEX6[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("HEX6[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("HEX6[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("HEX6[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("HEX6[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX6";
}

SIGNAL("SW[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("b")
{
	MEMBERS = "SW[13]", "SW[12]", "SW[11]", "SW[10]";
}

GROUP("a")
{
	MEMBERS = "SW[17]", "SW[16]", "SW[15]", "SW[14]";
}

TRANSITION_LIST("HEX0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 91.451;
		LEVEL 1 FOR 80.114;
		LEVEL 0 FOR 79.886;
		LEVEL 1 FOR 41.722;
		LEVEL 0 FOR 79.935;
		LEVEL 1 FOR 38.457;
		LEVEL 0 FOR 79.631;
		LEVEL 1 FOR 38.495;
		LEVEL 0 FOR 43.113;
		LEVEL 1 FOR 78.649;
		LEVEL 0 FOR 79.602;
		LEVEL 1 FOR 80.333;
		LEVEL 0 FOR 79.667;
		LEVEL 1 FOR 80.333;
		LEVEL 0 FOR 28.612;
	}
}

TRANSITION_LIST("HEX0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 91.145;
		LEVEL 1 FOR 80.138;
		LEVEL 0 FOR 79.862;
		LEVEL 1 FOR 41.072;
		LEVEL 0 FOR 0.305;
		LEVEL 1 FOR 0.369;
		LEVEL 0 FOR 118.023;
		LEVEL 1 FOR 0.369;
		LEVEL 0 FOR 117.826;
		LEVEL 1 FOR 42.174;
		LEVEL 0 FOR 79.588;
		LEVEL 1 FOR 78.54;
		LEVEL 0 FOR 270.589;
	}
}

TRANSITION_LIST("HEX0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 292.31;
		LEVEL 0 FOR 38.299;
		LEVEL 1 FOR 38.166;
		LEVEL 0 FOR 160.427;
		LEVEL 1 FOR 41.407;
		LEVEL 0 FOR 0.693;
		LEVEL 1 FOR 0.037;
		LEVEL 0 FOR 79.625;
		LEVEL 1 FOR 77.811;
		LEVEL 0 FOR 271.225;
	}
}

TRANSITION_LIST("HEX0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.972;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 41.286;
		LEVEL 0 FOR 278.687;
		LEVEL 1 FOR 0.027;
		LEVEL 0 FOR 430.028;
	}
}

TRANSITION_LIST("HEX0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.438;
		LEVEL 1 FOR 0.313;
		LEVEL 0 FOR 159.687;
		LEVEL 1 FOR 0.313;
		LEVEL 0 FOR 121.599;
		LEVEL 1 FOR 0.313;
		LEVEL 0 FOR 117.775;
		LEVEL 1 FOR 0.313;
		LEVEL 0 FOR 81.295;
		LEVEL 1 FOR 0.313;
		LEVEL 0 FOR 158.052;
		LEVEL 1 FOR 0.306;
		LEVEL 0 FOR 159.694;
		LEVEL 1 FOR 0.306;
		LEVEL 0 FOR 109.283;
	}
}

TRANSITION_LIST("HEX0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 728.448;
		LEVEL 1 FOR 1.833;
		LEVEL 0 FOR 79.86;
		LEVEL 1 FOR 80.14;
		LEVEL 0 FOR 79.86;
		LEVEL 1 FOR 29.859;
	}
}

TRANSITION_LIST("HEX0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.8;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 41.593;
		LEVEL 0 FOR 80.319;
		LEVEL 1 FOR 0.311;
		LEVEL 0 FOR 117.777;
		LEVEL 1 FOR 0.311;
		LEVEL 0 FOR 81.297;
		LEVEL 1 FOR 0.311;
		LEVEL 0 FOR 157.628;
		LEVEL 1 FOR 0.187;
		LEVEL 0 FOR 159.813;
		LEVEL 1 FOR 0.187;
		LEVEL 0 FOR 109.466;
	}
}

TRANSITION_LIST("HEX4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 369.512;
		LEVEL 1 FOR 155.751;
		LEVEL 0 FOR 474.737;
	}
}

TRANSITION_LIST("HEX4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 524.975;
		LEVEL 1 FOR 200.285;
		LEVEL 0 FOR 274.74;
	}
}

TRANSITION_LIST("HEX4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 365.077;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 274.923;
	}
}

TRANSITION_LIST("HEX4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.403;
		LEVEL 1 FOR 0.151;
		LEVEL 0 FOR 274.446;
	}
}

TRANSITION_LIST("HEX4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.545;
		LEVEL 1 FOR 274.455;
	}
}

TRANSITION_LIST("HEX4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX6[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 289.767;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 430.233;
	}
}

TRANSITION_LIST("HEX6[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 290.024;
		LEVEL 0 FOR 709.976;
	}
}

TRANSITION_LIST("HEX6[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 290.071;
		LEVEL 0 FOR 709.929;
	}
}

TRANSITION_LIST("HEX6[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 290.061;
		LEVEL 0 FOR 709.939;
	}
}

TRANSITION_LIST("HEX6[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX6[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX6[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 289.506;
		LEVEL 0 FOR 710.494;
	}
}

TRANSITION_LIST("SW[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 280.0;
	}
}

TRANSITION_LIST("SW[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 480.0;
	}
}

TRANSITION_LIST("SW[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 280.0;
	}
}

TRANSITION_LIST("SW[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("SW[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 720.0;
	}
}

TRANSITION_LIST("SW[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 440.0;
	}
}

TRANSITION_LIST("SW[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "SW[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SW[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SW[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SW[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "HEX6[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "SW[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SW[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SW[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SW[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "SW[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

TIME_BAR
{
	TIME = 20250;
	MASTER = TRUE;
}
;
