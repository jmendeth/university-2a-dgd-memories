/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 6400.0;
	SIMULATION_TIME = 6400.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 25.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "in";
}

SIGNAL("out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out";
}

SIGNAL("z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("a[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1600.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("a[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 800.0;
		}
	}
}

TRANSITION_LIST("a[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
	}
}

TRANSITION_LIST("b")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
	}
}

TRANSITION_LIST("in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("in[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1600.0;
			LEVEL 1 FOR 1600.0;
		}
	}
}

TRANSITION_LIST("in[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 800.0;
		}
	}
}

TRANSITION_LIST("in[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
	}
}

TRANSITION_LIST("in[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
	}
}

TRANSITION_LIST("in[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 32;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("in[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 64;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("in[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 128;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 209.448;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 200.684;
			LEVEL 0 FOR 199.316;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 201.555;
			LEVEL 0 FOR 198.445;
		}
		LEVEL 1 FOR 202.048;
		LEVEL 0 FOR 197.952;
		LEVEL 1 FOR 203.165;
		LEVEL 0 FOR 3187.387;
	}
}

TRANSITION_LIST("out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.564;
		LEVEL 0 FOR 5.758;
		LEVEL 1 FOR 194.242;
		LEVEL 0 FOR 0.673;
		LEVEL 1 FOR 199.327;
		LEVEL 0 FOR 2.037;
		LEVEL 1 FOR 197.963;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.673;
			LEVEL 1 FOR 199.327;
			LEVEL 0 FOR 1.544;
			LEVEL 1 FOR 198.456;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.673;
			LEVEL 1 FOR 199.327;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.544;
			LEVEL 1 FOR 198.456;
			LEVEL 0 FOR 0.673;
			LEVEL 1 FOR 199.327;
		}
		LEVEL 0 FOR 2.037;
		LEVEL 1 FOR 197.963;
		LEVEL 0 FOR 0.673;
		LEVEL 1 FOR 199.327;
		LEVEL 0 FOR 3.148;
		LEVEL 1 FOR 1.056;
		LEVEL 0 FOR 3001.554;
		LEVEL 1 FOR 1.901;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 133.777;
	}
}

TRANSITION_LIST("out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 206.428;
		LEVEL 1 FOR 5.086;
		LEVEL 0 FOR 194.914;
		LEVEL 1 FOR 0.872;
		LEVEL 0 FOR 199.128;
		LEVEL 1 FOR 1.365;
		LEVEL 0 FOR 198.635;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.872;
			LEVEL 0 FOR 199.128;
		}
		LEVEL 1 FOR 1.365;
		LEVEL 0 FOR 198.635;
		LEVEL 1 FOR 0.872;
		LEVEL 0 FOR 199.128;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 2.767;
		LEVEL 1 FOR 197.233;
		LEVEL 0 FOR 0.872;
		LEVEL 1 FOR 199.128;
		LEVEL 0 FOR 1.365;
		LEVEL 1 FOR 198.635;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.872;
			LEVEL 1 FOR 199.128;
		}
		LEVEL 0 FOR 1.365;
		LEVEL 1 FOR 198.635;
		LEVEL 0 FOR 0.872;
		LEVEL 1 FOR 199.128;
		LEVEL 0 FOR 1405.086;
		LEVEL 1 FOR 1.163;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.738;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 1448.099;
		LEVEL 0 FOR 1.901;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 136.585;
	}
}

TRANSITION_LIST("out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 209.494;
		LEVEL 1 FOR 4.207;
		LEVEL 0 FOR 195.793;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.486;
			LEVEL 0 FOR 199.514;
		}
		LEVEL 1 FOR 2.653;
		LEVEL 0 FOR 0.286;
		LEVEL 1 FOR 197.061;
		LEVEL 0 FOR 2.56;
		LEVEL 1 FOR 197.44;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.486;
			LEVEL 1 FOR 199.514;
		}
		LEVEL 0 FOR 2.653;
		LEVEL 1 FOR 0.286;
		LEVEL 0 FOR 197.061;
		LEVEL 1 FOR 1.888;
		LEVEL 0 FOR 198.112;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.486;
			LEVEL 0 FOR 199.514;
		}
		LEVEL 1 FOR 2.653;
		LEVEL 0 FOR 0.286;
		LEVEL 1 FOR 197.061;
		LEVEL 0 FOR 1.888;
		LEVEL 1 FOR 198.112;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.486;
			LEVEL 1 FOR 199.514;
		}
		LEVEL 0 FOR 2.653;
		LEVEL 1 FOR 0.286;
		LEVEL 0 FOR 774.714;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 0.286;
		LEVEL 1 FOR 601.268;
		LEVEL 0 FOR 1.163;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.738;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 46.545;
		LEVEL 1 FOR 0.286;
		LEVEL 0 FOR 601.268;
		LEVEL 1 FOR 1.163;
		LEVEL 0 FOR 72.283;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 2.717;
		LEVEL 1 FOR 97.283;
		LEVEL 0 FOR 0.286;
		LEVEL 1 FOR 601.268;
		LEVEL 0 FOR 1.901;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 134.398;
	}
}

TRANSITION_LIST("out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 206.891;
		LEVEL 1 FOR 3.723;
		LEVEL 0 FOR 196.277;
		LEVEL 1 FOR 0.704;
		LEVEL 0 FOR 3.583;
		LEVEL 1 FOR 195.713;
		LEVEL 0 FOR 3.723;
		LEVEL 1 FOR 196.277;
		LEVEL 0 FOR 2.169;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 195.713;
		LEVEL 1 FOR 2.076;
		LEVEL 0 FOR 197.924;
		LEVEL 1 FOR 2.076;
		LEVEL 0 FOR 2.211;
		LEVEL 1 FOR 195.713;
		LEVEL 0 FOR 2.076;
		LEVEL 1 FOR 197.924;
		LEVEL 0 FOR 2.169;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 195.713;
		LEVEL 1 FOR 1.404;
		LEVEL 0 FOR 198.596;
		LEVEL 1 FOR 1.404;
		LEVEL 0 FOR 2.883;
		LEVEL 1 FOR 195.713;
		LEVEL 0 FOR 1.404;
		LEVEL 1 FOR 198.596;
		LEVEL 0 FOR 2.169;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 195.713;
		LEVEL 1 FOR 1.404;
		LEVEL 0 FOR 198.596;
		LEVEL 1 FOR 2.076;
		LEVEL 0 FOR 2.211;
		LEVEL 1 FOR 195.713;
		LEVEL 0 FOR 1.404;
		LEVEL 1 FOR 198.596;
		LEVEL 0 FOR 2.169;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 372.882;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 199.436;
		LEVEL 1 FOR 1.163;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.738;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.452;
		LEVEL 0 FOR 2.211;
		LEVEL 1 FOR 199.436;
		LEVEL 0 FOR 1.163;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.738;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 46.545;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 199.436;
		LEVEL 1 FOR 1.163;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.518;
		LEVEL 0 FOR 2.883;
		LEVEL 1 FOR 199.436;
		LEVEL 0 FOR 1.163;
		LEVEL 1 FOR 72.283;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.717;
		LEVEL 0 FOR 97.283;
		LEVEL 1 FOR 2.118;
		LEVEL 0 FOR 199.436;
		LEVEL 1 FOR 1.901;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 146.452;
		LEVEL 0 FOR 2.211;
		LEVEL 1 FOR 199.436;
		LEVEL 0 FOR 1.901;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 137.485;
	}
}

TRANSITION_LIST("out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 206.216;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 3.02;
			LEVEL 0 FOR 196.98;
		}
		LEVEL 1 FOR 3.02;
		LEVEL 0 FOR 173.451;
		LEVEL 1 FOR 23.529;
		LEVEL 0 FOR 1.471;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 196.98;
		LEVEL 1 FOR 1.378;
		LEVEL 0 FOR 1.642;
		LEVEL 1 FOR 1.168;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.738;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 45.074;
		LEVEL 0 FOR 1.378;
		LEVEL 1 FOR 1.642;
		LEVEL 0 FOR 196.98;
		LEVEL 1 FOR 1.378;
		LEVEL 0 FOR 1.642;
		LEVEL 1 FOR 1.168;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.738;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 45.074;
		LEVEL 0 FOR 1.471;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 196.98;
		LEVEL 1 FOR 0.706;
		LEVEL 0 FOR 2.314;
		LEVEL 1 FOR 1.168;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 95.812;
		LEVEL 0 FOR 0.706;
		LEVEL 1 FOR 2.314;
		LEVEL 0 FOR 196.98;
		LEVEL 1 FOR 0.706;
		LEVEL 0 FOR 2.314;
		LEVEL 1 FOR 1.168;
		LEVEL 0 FOR 72.283;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 2.717;
		LEVEL 1 FOR 95.812;
		LEVEL 0 FOR 1.471;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 196.98;
		LEVEL 1 FOR 0.706;
		LEVEL 0 FOR 2.314;
		LEVEL 1 FOR 1.906;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 145.074;
		LEVEL 0 FOR 1.378;
		LEVEL 1 FOR 1.642;
		LEVEL 0 FOR 196.98;
		LEVEL 1 FOR 0.706;
		LEVEL 0 FOR 2.314;
		LEVEL 1 FOR 1.906;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 145.074;
		LEVEL 0 FOR 1.471;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 173.451;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 198.358;
		LEVEL 1 FOR 1.642;
		LEVEL 0 FOR 1.168;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.738;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.452;
		LEVEL 1 FOR 1.642;
		LEVEL 0 FOR 198.358;
		LEVEL 1 FOR 1.642;
		LEVEL 0 FOR 1.168;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.738;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 46.545;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 197.686;
		LEVEL 1 FOR 2.314;
		LEVEL 0 FOR 1.168;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 96.518;
		LEVEL 1 FOR 2.314;
		LEVEL 0 FOR 197.686;
		LEVEL 1 FOR 2.314;
		LEVEL 0 FOR 1.168;
		LEVEL 1 FOR 72.283;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.717;
		LEVEL 0 FOR 97.283;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 197.686;
		LEVEL 1 FOR 2.314;
		LEVEL 0 FOR 1.906;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 146.452;
		LEVEL 1 FOR 1.642;
		LEVEL 0 FOR 197.686;
		LEVEL 1 FOR 2.314;
		LEVEL 0 FOR 1.906;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 138.858;
	}
}

TRANSITION_LIST("out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.699;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 72.277;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 2.723;
		LEVEL 1 FOR 72.277;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 97.184;
		LEVEL 0 FOR 2.816;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.268;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.452;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 97.184;
		LEVEL 0 FOR 2.816;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 49.268;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 46.545;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 3.487;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 96.513;
		LEVEL 1 FOR 3.487;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 3.487;
		LEVEL 1 FOR 72.277;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 72.277;
		LEVEL 1 FOR 24.236;
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 0.671;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 49.268;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 45.781;
		LEVEL 0 FOR 0.671;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 0.671;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 49.268;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 45.781;
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 2.723;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 72.277;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 2.723;
		LEVEL 1 FOR 72.277;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 97.184;
		LEVEL 0 FOR 2.816;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.268;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.452;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 97.184;
		LEVEL 0 FOR 2.816;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 49.268;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 46.545;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 3.487;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 96.513;
		LEVEL 1 FOR 3.487;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 3.487;
		LEVEL 1 FOR 72.277;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 72.277;
		LEVEL 1 FOR 24.236;
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 2.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 0.671;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 49.268;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 45.781;
		LEVEL 0 FOR 0.671;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 96.513;
		LEVEL 0 FOR 0.671;
		LEVEL 1 FOR 2.816;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 21.545;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 49.268;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 21.545;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.455;
		LEVEL 1 FOR 39.569;
	}
}

TRANSITION_LIST("out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59.791;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 21.538;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 3.462;
			LEVEL 1 FOR 21.538;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 3.462;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.434;
		LEVEL 1 FOR 3.566;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.462;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 28.462;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 21.538;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 3.462;
			LEVEL 1 FOR 21.538;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 3.462;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.434;
		LEVEL 1 FOR 3.566;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.462;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 28.462;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 21.538;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 3.462;
			LEVEL 1 FOR 21.538;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 3.462;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.434;
		LEVEL 1 FOR 3.566;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.462;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 28.462;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 21.538;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 3.462;
			LEVEL 1 FOR 21.538;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 3.462;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.434;
		LEVEL 1 FOR 3.566;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.434;
		LEVEL 0 FOR 3.566;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 3.462;
		LEVEL 1 FOR 21.538;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.462;
		LEVEL 0 FOR 21.538;
		LEVEL 1 FOR 18.671;
	}
}

TRANSITION_LIST("z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 11;
				LEVEL 1 FOR 25.0;
				LEVEL 0 FOR 25.0;
			}
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 0.313;
			LEVEL 1 FOR 24.687;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 25.0;
				LEVEL 1 FOR 25.0;
			}
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 0.313;
			LEVEL 0 FOR 24.687;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 0.313;
		LEVEL 1 FOR 24.687;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 0.313;
		LEVEL 0 FOR 24.687;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 0.313;
		LEVEL 1 FOR 24.687;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 16.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 20150;
	MASTER = TRUE;
}
;
